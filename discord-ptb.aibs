#!/bin/bash
# Title: spm
# Description: Downloads and installs AppImages and precompiled tar archives.  Can also upgrade and remove installed packages.
# Dependencies: GNU coreutils, tar, wget
# Author: simonizor
# Website: http://www.simonizor.gq
# License: GPL v2.0 only
##################################################################################################
# aibs for discord-ptb
# Created by simonizor
##################################################################################################

AIBSIMG_AUTHOR="Discord"
AIBSIMG_MAINTAINER="simonizor"
AIBSIMG_DESCRIPTION="All-in-one voice and text chat for gamers that's free, secure, and works on both your desktop and phone"
AIBSIMG_CATEGORY="Chat"
AIBSIMG_WEBSITE="https://discordapp.com"
AIBSIMG_NAME="discord-ptb"
AIBSIMG_SOURCE="Direct"
AIBSIMG_SOURCE_TYPE="Binary"
AIBSIMG_USE_WRAPPER="TRUE"
AIBSIMG_USE_SPECIAL_INSTRUCTIONS="FALSE"

aibsdepcheckfunc () {
    if ! type ar >/dev/null 2>&1; then
        MISSING_DEPS="TRUE"
        echo "$(tput setaf 1)ar (binutils) is not installed!$(tput sgr0)"
    fi
    if [ "$MISSING_DEPS" = "TRUE" ]; then
        echo "$(tput setaf 1)Missing one or more packages required to build $AIBSIMG_NAME; exiting...$(tput sgr0)"
        rm -rf "$CONFDIR"/cache/*
        exit 1
    fi
}

aibsversionfunc () {
    wget -S --read-timeout=30 --spider "https://discordapp.com/api/download/ptb?platform=linux&format=deb" -o "$CONFDIR"/cache/"$AIBSIMG".latest
    AIBSIMG_VERSION_URI="$(grep -o "Location:.*" "$CONFDIR"/cache/"$AIBSIMG".latest | cut -f2 -d" ")"
    AIBSIMG_VERSION="$(echo "${AIBSIMG_VERSION_URI##*/}" | cut -f3 -d'-' | cut -f-3 -d'.')-x86_64"
}

aibsdlsourcefunc () {
    wget --no-verbose --read-timeout=30 "https://discordapp.com/api/download/ptb?platform=linux&format=deb" -O "$AIBSIMG_DEPS_DIR"/discord-ptb.deb
}

aibsdldepsfunc () {
    debiangetlatestdebfunc () {
        DEB_RELEASE="$1"
        DEB_NAME="$2"
        LATEST_DEB_URL="$(wget "https://packages.debian.org/$DEB_RELEASE/amd64/$DEB_NAME/download" -qO - | grep '<li>*..*amd64.deb' | cut -f2 -d'"' | head -n 1)"
        wget --no-verbose --read-timeout=30 "$LATEST_DEB_URL" -O "$AIBSIMG_DEPS_DIR"/"$DEB_NAME".deb
    }
    debiangetlatestdebfunc "jessie" "libc++1"
    debiangetlatestdebfunc "jessie" "libnotify4"
    debiangetlatestdebfunc "jessie" "libgconf-2-4"
    debiangetlatestdebfunc "jessie" "libatomic1"
    debiangetlatestdebfunc "jessie" "libxss1"
    debiangetlatestdebfunc "jessie" "libxtst6"
    debiangetlatestdebfunc "jessie" "libappindicator1"
    debiangetlatestdebfunc "jessie" "libnspr4"
    debiangetlatestdebfunc "jessie" "libnss3"
}

aibsbuildfunc () {
mkdir "$AIBSIMG_DEPS_DIR"/debs
cd "$AIBSIMG_DEPS_DIR"
debextractfunc () {
    ar x "$AIBSIMG_DEPS_DIR"/"$1"
    rm -f "$AIBSIMG_DEPS_DIR"/control.tar.gz
    rm -f "$AIBSIMG_DEPS_DIR"/debian-binary
    tar -xf "$AIBSIMG_DEPS_DIR"/data.tar.* -C "$AIBSIMG_DEPS_DIR"/debs/
    rm -f "$AIBSIMG_DEPS_DIR"/data.tar.*
    cp -r "$AIBSIMG_DEPS_DIR"/debs/* "$AIBSIMG_BUILD_DIR"/
    rm -rf "$AIBSIMG_DEPS_DIR"/debs/*
}
debextractfunc "discord-ptb.deb"
debextractfunc "libc++1.deb"
debextractfunc "libnotify4.deb"
debextractfunc "libgconf-2-4.deb"
debextractfunc "libatomic1.deb"
debextractfunc "libxss1.deb"
debextractfunc "libxtst6.deb"
debextractfunc "libappindicator1.deb"
debextractfunc "libnspr4.deb"
debextractfunc "libnss3.deb"
mv "$AIBSIMG_BUILD_DIR"/discord-ptb.wrapper "$AIBSIMG_BUILD_DIR"/usr/bin/
cp "$AIBSIMG_BUILD_DIR"/usr/share/discord-ptb/discord.png "$AIBSIMG_BUILD_DIR"/discord-ptb.png
mkdir -p "$AIBSIMG_BUILD_DIR"/usr/share/icons/default/256x256/apps
cp "$AIBSIMG_BUILD_DIR"/discord-ptb.png "$AIBSIMG_BUILD_DIR"/usr/share/icons/default/256x256/apps/discord-ptb.png
cp "$AIBSIMG_BUILD_DIR"/discord-ptb.png "$AIBSIMG_BUILD_DIR"/usr/share/icons/default/256x256/apps/DiscordPTB.png
cat >"$AIBSIMG_BUILD_DIR"/discord-ptb.desktop << EOL
[Desktop Entry]
Name=DiscordPTB
StartupWMClass=discord
Comment=All-in-one voice and text chat for gamers that's free, secure, and works on both your desktop and phone.
GenericName=Internet Messenger
Exec=././/bin/discord-ptb.sh
Icon=discord-ptb
Type=Application
StartupNotify=false
Categories=Network;InstantMessaging;

EOL
cat >"$AIBSIMG_BUILD_DIR"/AppRun.conf << EOL
APPRUN_SET_PATH="TRUE"
APPRUN_SET_LD_LIBRARY_PATH="TRUE"
APPRUN_SET_PYTHONPATH="FALSE"
APPRUN_SET_PYTHONHOME="FALSE"
APPRUN_SET_PYTHONDONTWRITEBYTECODE="FALSE"
APPRUN_SET_XDG_DATA_DIRS="FALSE"
APPRUN_SET_PERLLIB="FALSE"
APPRUN_SET_GSETTINGS_SCHEMA_DIR="FALSE"
APPRUN_SET_QT_PLUGIN_PATH="FALSE"
APPRUN_EXEC="./usr/bin/discord-ptb.sh"

EOL

cat >"$AIBSIMG_BUILD_DIR"/usr/bin/discord-ptb.sh << \EOL
#!/bin/bash

case $1 in
    --update)
        if type wget >/dev/null 2>&1; then
            echo "Downloading appimagebuild to build an AppImage for the latest version of Discord PTB..."
            if [ ! -d "$HOME/Downloads" ]; then
                mkdir "$HOME"/Downloads
            fi
            wget "https://github.com/simoniz0r/AppImages/releases/download/appimagebuild/appimagebuild-light-latest-x86_64.AppImage" -O "$HOME"/Downloads/appimagebuild && echo "Using appimagebuild to build an AppImage for the latest version of Discord PTB..." || { echo "Failed to download appimagebuild!"; exit 1; }
            chmod a+x "$HOME"/Downloads/appimagebuild
            "$HOME"/Downloads/appimagebuild discord-ptb || { echo "Failed to build an AppImage for the latest version of Discord PTB.  Please report an issue here: https://github.com/simoniz0r/AppImages/issues"; rm -f "$HOME"/Downloads/appimagebuild; exit 1; }
            rm -f "$HOME"/Downloads/appimagebuild
            exit 0
        elif type curl >/dev/null 2>&1; then
            echo "Downloading appimagebuild to build an AppImage for the latest version of Discord PTB..."
            if [ ! -d "$HOME/Downloads" ]; then
                mkdir "$HOME"/Downloads
            fi
            curl -L -o "$HOME"/Downloads/appimagebuild "https://github.com/simoniz0r/AppImages/releases/download/appimagebuild/appimagebuild-light-latest-x86_64.AppImage" && echo "Using appimagebuild to build an AppImage for the latest version of Discord PTB..." || { echo "Failed to download appimagebuild!"; exit 1; }
            chmod a+x "$HOME"/Downloads/appimagebuild
            "$HOME"/Downloads/appimagebuild discord-ptb || { echo "Failed to build an AppImage for the latest version of Discord PTB.  Please report an issue here: https://github.com/simoniz0r/AppImages/issues"; rm -f "$HOME"/Downloads/appimagebuild; exit 1; }
            rm -f "$HOME"/Downloads/appimagebuild
            exit 0
        else
            echo "Cannot download appimagebuild to build an AppImage for new version of Discord PTB; curl or wget not installed!"
            exit 1
        fi
        ;;
    --remove)
        ./usr/bin/discord-ptb.wrapper --remove-appimage-desktop-integration && echo "Removed .desktop file and icon for menu integration for Discord PTB." || echo "Failed to remove .desktop file and icon!"
        exit 0
        ;;
    --help)
        echo "Arguments provided by Discord PTB AppImage:"
        echo "--update - Automatically build an AppImage for the latest version of Discord PTB.  Will be moved to '~/Downloads'"
        echo "--remove - Remove .desktop file and icon for menu integration if created by the AppImage."
        echo "--help   - Show this help output."
        echo
        echo "All other arguments will be passed to Discord PTB; any valid arguments will function the same as a regular Discord PTB install."
        exit 0
        ;;
    *)
        ./usr/bin/discord-ptb.wrapper && sleep 15
        ;;
esac

EOL
chmod a+x "$AIBSIMG_BUILD_DIR"/usr/bin/discord-ptb.sh
}

if [ "$AIBSIMG_USE_SEPCIAL_INSTRUCTIONS" = "TRUE" ]; then
    aibsspecialfunc () {
        echo "no special instructions"
    }
fi
